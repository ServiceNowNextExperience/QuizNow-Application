<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_quiznow_quiz_instance</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_quiznow_quiz_instance">access_codeVALCHANGES^ORaccess_codeISEMPTY^EQ<item endquery="false" field="access_code" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="access_code" goto="false" newquery="false" operator="ISEMPTY" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate or Generate Access Code</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
	
    const accessCode = current.access_code.toString().trim().toUpperCase() || generateAlphaCode();
    // Make sure that the access code is 4 characters, all upper case and only alpha.
    if (!isValidString(accessCode)) {
        gs.addErrorMessage('Access code must be four characters and alpha only.');
        action.setAbortAction(true);
		return;
	} else if(accessCodeExists(accessCode)) {
		gs.addErrorMessage(`Access code ${accessCode} already exists. Please choose another one, or blank out the value to auto-generate one.`);
		action.setAbortAction(true);
		return;
    } else {
		current.access_code = accessCode;
	}

	function accessCodeExists(accessCode){
		const gr = new GlideRecordSecure('x_snc_quiznow_quiz_instance');
		gr.addQuery('access_code', accessCode);
		gr.query();
		if(gr.hasNext()){
			return true;
		}
		return false;
	}

    function isValidString(inputString) {
        if (inputString.length != 4) {
            return false;
        }
        for (let i = 0; i < inputString.length; i++) {
            const currentChar = inputString.charAt(i);
            if (alphabet.indexOf(currentChar) === -1) {
                return false;
            }
        }
        return true;
    }

    function generateAlphaCode() {
        let accessCode = '';
        for (let i = 0; i < 4; i++) {
            const randomIndex = Math.floor(Math.random() * alphabet.length);
            accessCode += alphabet[randomIndex];
        }
		gs.addInfoMessage(`Automatically generated 4 character alpha access code "${accessCode}"`);
        return accessCode;
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>jon.lind</sys_created_by>
        <sys_created_on>2024-02-14 21:02:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ea53a6a683944210f918eac0deaad3e1</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>Validate or Generate Access Code</sys_name>
        <sys_overrides/>
        <sys_package display_value="QuizNow" source="x_snc_quiznow">2994605e478a7510741c9fe4126d43b7</sys_package>
        <sys_policy/>
        <sys_scope display_value="QuizNow">2994605e478a7510741c9fe4126d43b7</sys_scope>
        <sys_update_name>sys_script_ea53a6a683944210f918eac0deaad3e1</sys_update_name>
        <sys_updated_by>jon.lind</sys_updated_by>
        <sys_updated_on>2024-02-14 21:45:29</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ea53a6a683944210f918eac0deaad3e1"/>
</record_update>
